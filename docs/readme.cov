B################################################
# From Edgar: FASTA file
################################################
cat covid-3-12.fasta | sed  -E 's/>.+(EPI_ISL_[0-9]+)/>\1/' > cov.fas (to avoid this step: don't export isolate id)
cat gisaid_covid19_3_19.tsv | grep [Hh]uman | cut -f2 > epi-human 2> error 
bioseq -p"file:epi-human" cov.fas > cov-human.fas
#check host info:
cut -f7 gisaid-3-24.tsv | sort | uniq -c

# CSV file
# better to be TSV (comma problem when using cut)
# cut -f2,7 -d',' gisaid_covid19_3_12.csv | grep -v host | tr ',' '\t' > host-info.tsv
# grep Human host-info.tsv | cut -f1 > ids-human
# grep Environment host-info.tsv | cut -f1 > ids-environ
# grep Rhinolophus host-info.tsv | cut -f1 > ids-outgroup
# grep -v "Human\|Rhinolophus\|Environ" host-info.tsv | cut -f1 > ids-animal
# bioseq -p"file:ids-human" cov.fas > cov-human.fas
# bioseq -p"file:ids-outgroup" cov.fas > cov-outgroup.fas

#######################################
# Parse GISAID sequences fasta
######################################

1. bioseq -B cov.fas # burst into individual files
1a. move the un-bursted file out the "human-files" directory!!!
mv cov-human.fas ../

2. sam align (weigang@wallace:~/cov-03-09-2030/host-human$ for f in *.fas; do ../sam-align.bash $f; done )
    nucmer --sam-long=COH1 B111.fa COH1.fa
    samtools view -b COH1.sam -T B111.fa > COH1.bam
    samtools sort COH1.bam -o COH1.sorted.bam
    samtools index COH1.sorted.bam

    with script: for f in *.fas; do ../sam-align.bash $f; done

3c. Less strict call: bcftools mpileup -Ou -f ../ref.fas   *.sorted.bam | bcftools call -mv --ploidy-file ploidy.txt  -Ob -o calls.bcf -P 0.05 (or -P 0.1; large P value for less strict call, default 1.1e-3)
# 3b. bcftools mpileup -Ou -f ../ref.fas  *.sorted.bam | bcftools call -mv --ploidy-file ploidy.txt  -Ob -o calls.bcf, with default ploidy as 1:
weigang@wallace:~/cov-03-09-2020/cov57$ cat ploidy.txt
*       *       *       M       1

6a. bcftools view -m2 -M2 --types snps calls.bcf > snps.bcf ( get only biallelic SNPs)
6b. vcftools --vcf input_file.vcf --remove-indels --recode --recode-INFO-all --out cov.vcf # filter SNPs only

7. filter sites by allele counts: only informative sites
bcftools view snps.bcf > snps.vcf
vcftools --vcf snps.vcf --mac 2 --recode --recode-INFO-all --out snps2.vcf

###############################
# 3d. outgroup mapping:
################################
bcftools mpileup -Ou -f ../ref.fas  otg.sorted.bam | bcftools call -mv --ploidy-file ../ploidy.txt  -Ob -o otg.bcf -P 0.1 (default if too diverse, e.g., manis genomes)

5. bcftools stats raw.vcf > vcf.stats # check TsTv ratio

6c. fitler outgroup SNPs:
bcftools view otg.bcf > otg.vcf
weigang@wallace:~/cov-03-12-2020$ bgzip snps2.vcf
weigang@wallace:~/cov-03-12-2020$ tabix snps2.vcf.gz
weigang@wallace:~/cov-03-12-2020$ bgzip otg.vcf
weigang@wallace:~/cov-03-12-2020$ tabix otg.vcf.gz

bcftools isec -n=2 -w1 otg.vcf.gz snps2.vcf.gz > otg-isec-sites.vcf
bgzip & tabix to index
vcf-merge -d -R 0 otg-isec-sites.vcf.gz snps2.vcf.gz > snps-ref.vcf ( no duplicated line; add ref state "0" instead of missing)


7. Get sample FASTA:
bcftools query -l snps.bcf > samples
cat samples | while read line; do echo ">$line"; bcftools query -s "$line" -f '[%TGT]' snps-ref.vcf; echo; done > samples.fas

(8 get ref FASTA; if necessary
echo ">ref" >> sample.fas
grep "^CP" gbs50-snps2.vcf | cut -f4 | paste -s -d '' >> sample.fas)

9. SNP counts (for verification)
bcftools view snps.bcf > snps-ref.vcf
vcftools --vcf --counts snps-ref.vcf

#10. Remove gapped samples
#bioseq -d'ambig:20' samples.fas > samples2.fas # remove seqs with 20 or more missing/non-ATCG bases "."
cat samples2.fas | sed "s/.sorted.bam//" > samples3.fas # fix names
#bioaln -i'fasta' --gap-char 'n' samples3.fas  > samples4.aln # change gaps to "n" to help reducing unique haps


#9. Annotate with gff


#####################
# MST by Perl
##################
# 1. replace gap char
# bioaln -i'fasta' --gap-char 'n' cov-275-outgroup.fas  > sample4.aln

# 2. run sssp_from_haps.pl
# perl hapnet.pl --vcf snps-ref.vcf --genome ref.gb --hap samples4.aln --output json 2> tmp.log > net.json

# 1. Impute: run "impute-hap.pl" twice
perl impute-hap.pl --dump-missing samples.aln > missing | sort -n | uniq -c
=> get start\end

# (a) removed seqs > 10% "." (non-ATCG); 
# (b) impute positions by the closest all-ATCG seq; 
# (c) output uniq STs ("imputed.aln" & "impute.log")
perl impute-hap.pl --start 5 --end 156 samples.aln > log

# 2. Get MST
hapnet.pl --genome ref.gb --vcf snps2-ref-03-19.vcf --hap imputed.aln --impute-log impute.log
# (a) net.json
# (b) edges.tsv
# (c) nodes.tsv

cat impute.log | sed 's/cov-outgroup/EPI_ISL_402131/' > impute.log2
perl cov-browser/hapnet.pl --genome cov-browser/ref.gb --vcf snps-ref.vcf --hap imputed.aln --impute-log impute.log2
############################
# Bootstrap analysis (not working yet)
#############################

1. Level 1: multiple runs (of the same haplotype alignmement)

Brian: really high support


2. Level 2: unique-fied STs => bootstrap => multiple runs

2a. for original
bioaln -u ../samples4.aln > boot-0.aln
../hapnet.pl --genome ../ref.gb --vcf ../snps-ref.vcf --hap boot-0.aln --output edge --no-uniq-seq  > net-0.tsv
cut -f1,2 net-0.tsv | sort -u | tr '\t' '-' > edge-0

2b. for bootstrapped (test)
bioaln --boot boot-0.aln > boot-1.aln
perl ../hapnet.pl --genome ../ref.gb --vcf ../snps-ref.vcf --hap boot-1.aln --output edge --no-uniq-seq  > net-1.tsv
cut -f1,2 net-1.tsv | sort -u | tr '\t' '-'> edge-1
comm -12 edge-0 edge-1 # get common edges

2c. bootstrap (loop)
for i in {1..99}; do bioaln --boot boot-0.aln > boot-$i.aln; done &
for i in {1..99}; do perl ../hapnet.pl --genome ../ref.gb --vcf ../snps-ref.vcf --hap boot-$i.aln --output edge --no-uniq-seq  > net-$i.tsv; done &
for i in {1..99}; do cut -f1,2 net-$i.tsv | sort -u | tr '\t' '-' > edge-$i; done
cat edge-0 | while read line; do echo -ne "$line\t"; grep $line edge-* | wc -l ; done # boot support for each edge

3. Level 3: bootstrapped haplotype alignment (hard to do, since STs are not comparable between runs)

4. Majority-rule parent (MRP) network from bootstrapped ST networks
4a. Collect all non-root STs;
4b. Trace back to ST1, each step taking the majority ST as the parent
    foreach v:
    	    p = get_parent;
	    if (p has NOT been visited) {
	       label p as visited;
	       create a new edge (from = p, to = v)
	    } 	       
4c. Reconstruct network
4d. Attaching nodelist + edgelist

4e. Get majority parents for each non-root node:
cat edge-* | sort | uniq -c | sort -rn > unique-edges # counts of uniq edges in 99 bootstrapped samples + 1 un-bootstrapped 

#############
# site imputation
#######################
"sample.aln", N=832 seqs, L=132 SNPs
Number of non-ATCG's per site:
> table(x)
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  18  19  20  21 
526 489 437 413 219  32  32  29  30  30  10  11   1   1   1   2   2   3   4   3 
 22  24  25  26  27  28  29  30  31  33  34  35  36  37  38  39  40  41  42  43 
  2   1   4   1  25   1   3   1   3   2  10   6   1   5   5  10   2   4   5   6 
 44  45  46  48  50  51  52  53  54  56  58  64  65  67  68  69  70  74  75  76 
  5   5   4   3  14   2   1   1   3  18   1   7   1   3   2   2  10   4  16  12 
 77  78  79  81  84  85  86  87  88  89  90  91  92  93  95  96  97  98  99 101 
  1   7   4  61   4   4   5   1   1   2   2   1   1   2   2   1   4   2   1   1 
102 103 104 105 106 108 110 111 112 118 119 120 121 122 123 124 125 126 127 128 
 19  20   1   5   5   2   2   1   1   3   2   2  11  10  11  11  32 472 491 506 
129 130 131 132 
523 528 536 532 

After removing seqs with 10% or more non-ATCG's:
"sample-03-19.aln", N=712 seqs, L=132 SNPs
> table(x)
x
  1   2   3   4   5   6   7   8   9  10  11  12  20  21  22  24  25  27  39  42 
416 379 331 309 126   9   9   9  11  11   4   6   1   2   1   1   2   2   4   1 
 48  50  54  68  69  70  74  75  78  79  81  86  91  93  95  97  98  99 101 105 
  1  10   2   1   1   3   2   2   5   2   1   2   1   1   1   1   1   1   1   4 
106 108 110 111 112 118 119 122 123 124 125 126 127 128 129 130 131 132 
  4   1   2   1   1   1   1   1   1   1   4 370 385 398 415 421 427 424 

perl impute-hap.pl --dump-missing samples.aln > missing | sort -n | uniq -c
=> remove end 12 sites 1-5 & 126-132; then impute the seq with the nearest non-ATCG nabe:

perl impute-hap.pl sample-03-19.aln > sample-03-19-impute.aln 2> sample-03-19-impute.log &

# 1. Position-specific imputation:
perl impute-hap.pl test-impute.aln 2> log
./hapnet.pl --genome ref.gb --vcf snps2-ref-03-19.vcf --hap imputed.aln --impute-log impute.log 
=> output 3 files: net.json; nodes.tsv; edges.tsv)

# 2. bootstrap
boot-net.bash 99

# 3. reconstruct majority-parent network (doesn't work: cycles in majority parents, leading to unconnected graph)
# hapnet.pl --genome ref.gb --vcf snps2-ref-03-19.vcf --hap imputed.aln --output json --impute-log impute.log --majority-parent pa-cts.long > mpn.json

# 3. reconstruct MST using boot edges
hapnet.pl --genome ref.gb --vcf snps2-ref-03-19.vcf --hap imputed.aln --output json --impute-log impute.log --boot-edges pa-cts.tsv

##############
# No imputation
###################

On azure:

perl cov-browser/impute-hap.pl --no-imputation samples3.aln
perl cov-browser/hapnet.pl --genome cov-browser/ref.gb --vcf snps-ref.vcf --impute-log impute.log2 --hap imputed.aln > log 

# homolasy check:
azureuser@myVM:~$ cut -f3 edges.tsv | sort -n | uniq -c | sort -n | tr -s ' ' | cut -f2 -d' ' | sort -n | uniq -c
     67 1 # no homoplasy/143
     40 2
     22 3
      7 4
      5 5
      1 6
      1 15
Homoplasy=53.1%

# edge check
cut -f1,2 edges.tsv | sort | uniq -c | sort -n
      3 ST117   ST174
      3 ST13    ST59
      3 ST21    ST116
      3 ST50    ST120
      4 ST18    ST130
      4 ST36    ST178
     11 ST213   ST129 # root edge
     29 ST85    ST90 # BAD ST90; don't know why. Remove & recompute

# remove ST90
bioaln -d'ST90' imputed.aln > imputed2.aln
perl cov-browser/hapnet.pl --genome cov-browser/ref.gb --vcf snps-ref.vcf --impute-log impute.log2 --hap imputed2.aln > log
     85 1
     29 2
     14 3
      9 4
      3 5
      1 6
      1 16
homoplasy = 40.1% (much improved)

# check syn/nonsyn
    140 0 # nonsyn
     22 NA # non-coding
     96 1 # syn
dn/ds: 140/3/96 = 0.486

check "*"
cut -f10 edges.tsv | sort | uniq -c
cut -f9 edges.tsv | sort | uniq -c

"*" 2
azureuser@myVM:~$ grep "*" edges.tsv: same site
ST32    ST92    13402   orf1ab  T       G       tat     tag     Y       *       0
ST49    ST134   13402   orf1ab  G       T       tag     tat     *       Y       0
ST31    ST96    13402   orf1ab  T       G       tat     tag     Y       *       0
ST135   ST133   13402   orf1ab  G       T       tag     tat     *       Y       0

(my $orfShift = 13468)

###############################
# Root analysis
#################################

1. pick STs
2. remove gaps: tr 'N' '-' | bioaln -g
3. run DNAPARS with root
4. Plot

#############################################
# boot & consense net
#############################################
# original
perl ../cov-browser/hapnet-boot.pl --genome ../cov-browser/ref.gb --vcf ../snps-ref.vcf --hap ../imputed2.aln --impute-log ../impute.log2

# get boot align
for i in {1..100}; do bioaln --boot imputed2.aln > boot-$i.aln; done
cat boot-$i.aln > boots.aln

# read multiple alignemtns:
perl ../cov-browser/hapnet-boot.pl --genome ../cov-browser/ref.gb --vcf ../snps-ref.vcf --hap boots.aln --impute-log ../impute.log2

# count unique edges
for f in edges-*.tsv; do cut -f1,2 $f | tr '\t' '-' | sort -u; done | sort | uniq -c > unique-edges

# count parents
../cov-browser/majority-parent.pl unique-edges > pa-ct.tsv

# get consensus network
perl cov-browser/hapnet-consense.pl --genome cov-browser/ref.gb --vcf snps-ref.vcf --hap imputed2.aln --impute-log impute.log2 --boot-file boot-files/pa-ct.tsv
=> net-con.json; nodes-con.tsv; edges-con.tsv

# check homoplasy
azureuser@myVM:~$ cut -f3 edges-con.tsv | sort -n | uniq -c | sort -n | tr -s ' ' | cut -f2 -d' ' | sort -n | uniq -c
     59 1
     32 2
     14 3
     12 4
     15 5
      6 6
      1 7
      1 11
      1 18

####################
# force root
######################
azureuser@myVM:~$ perl cov-browser/hapnet-root.pl --genome cov-browser/ref.gb --vcf snps-ref.vcf --hap imputed2.aln --impute-log impute.log2 --add-root

azureuser@myVM:~$ cut -f3 edges-1.tsv | sort -n | uniq -c | sort -n | tr -s ' ' | cut -f2 -d' ' | sort -n | uniq -c
     86 1
     27 2
     14 3
     11 4
      4 5
      1 13

####################
# impute 
####################
# trim ends
perl cov-browser/impute-hap.pl --dump-missing samples2.fas > missing

azureuser@myVM:~$ sort -n missing | uniq -c | head
   1734 1
   1382 2
   1241 3
   1206 4
   1097 5
   1002 6
    767 7 
    751 8
    741 9
     16 10 <= start

azureuser@myVM:~$ sort -n missing | uniq -c | tail
     12 151
     33 152
     18 153
     19 154
     26 155 <= end
    824 156
    874 157
    980 158
   1376 159
   1393 160

# impute (this takes long: 2500 seqs takes 45 min)
azureuser@myVM:~$ perl cov-browser/impute-hap.pl --start 10 --end 155 samples2.fas 2> log &

# remove ST90
bioaln -d'ST90' imputed.aln > with-impute.aln

# get MST
azureuser@myVM:~/with-impute$ perl ../cov-browser/hapnet-boot.pl --genome ../cov-browser/ref.gb --vcf ../snps-ref.vcf --hap with-impute.aln --impute-log with-impute.log

# check homoplasy (similar to un-imputed)
azureuser@myVM:~/with-impute$ cut -f3 edges-1.tsv | sort -n | uniq -c | sort -n | tr -s ' ' | cut -f2 -d' ' | sort -n | uniq -c
     85 1
     32 2
     16 3
      6 4
      3 5
      2 6
      1 13
-----------
  N = 145
Homoplasy Index = 0.41

# check syn/nonsyn
azureuser@myVM:~/with-impute$ cut -f3,11 edges-impute.tsv | sort -n | uniq -c | cut -f2 | sort | uniq -c
     77 0
     55 1
     13 NA
-------------
  N = 145
dn/ds =~ 77/3/55 = 0.47

####################################
# DNApars
#######################################

# phylip options:
"S" - no thorough search (fast, starting with a single MP tree)
"Y"
"o" - 212 (reset outgroup)
"4"
"5"
"."

# phylip DNApars (similar homoplasy scores; total steps = 260; 304 equally parsimonious trees)
     86 1
     31 2
     17 3
      5 4
      3 5
      2 6
      1 15
=> homoplay: 40.7%
# biotree --walk-edge 'ST213' > walk.edge

# To view graph with DOT: neato -Tpdf mygraph.dot > mygraph.pdf

# SNP sites:
bcftools query -f "%POS\n" snps-ref.vcf > snps.pos

# Make network (including adding hypothetical nodes and edges)
perl ../cov-browser/hapnet-from-edge-walk.pl --genome ref.gb --vcf snps.pos --hap with-impute.aln --impute-log with-impute.log --edge-file walk.edge

############################################
# 4/14/2020
# Add manis & ST90 into outgroup
############################################
# 1. identify human SNPs
azureuser@myVM:~$ l human-files/*.sorted.bam | wc # ST90 removed
   2544   22896  228960

azureuser@myVM:~$ l host-envion/*.sorted.bam | wc
      7      63     630

azureuser@myVM:~$ bcftools mpileup -Ou -f cov-browser/ref.fas human-files/*.sorted.bam host-envion/*.sorted.bam  | bcftools call -mv
--ploidy-file cov-browser/ploidy.txt -Ob -o calls.bcf -P 0.1 &
azureuser@myVM:~$ [mpileup] 2551 samples in 2551 input files
bcfools stats:
SN      0       number of samples:      2551
SN      0       number of records:      170
SN      0       number of no-ALTs:      0
SN      0       number of SNPs: 167
SN      0       number of MNPs: 0
SN      0       number of indels:       3
SN      0       number of others:       0
SN      0       number of multiallelic sites:   7
SN      0       number of multiallelic SNP sites:       7
# TSTV, transitions/transversions:
# TSTV  [2]id   [3]ts   [4]tv   [5]ts/tv        [6]ts (1st ALT) [7]tv (1st ALT) [8]ts/tv (1st ALT)
TSTV    0       121     53      2.28    119     48      2.48

# get only biallelic SNPs
bcftools view -m2 -M2 --types snps calls.bcf > snps.bcf 
SN      0       number of samples:      2551
SN      0       number of records:      160
SN      0       number of no-ALTs:      0
SN      0       number of SNPs: 160
SN      0       number of MNPs: 0
SN      0       number of indels:       0
SN      0       number of others:       0
SN      0       number of multiallelic sites:   0
SN      0       number of multiallelic SNP sites:       0
# TSTV, transitions/transversions:
# TSTV  [2]id   [3]ts   [4]tv   [5]ts/tv        [6]ts (1st ALT) [7]tv (1st ALT) [8]ts/tv (1st ALT)
TSTV    0       114     46      2.48    114     46      2.48

# filter sites by allele counts: only informative sites
bcftools view snps.bcf > snps.vcf
vcftools --vcf snps.vcf --mac 2 --recode --recode-INFO-all --out snps2.vcf
SN      0       number of samples:      2551
SN      0       number of records:      149
SN      0       number of no-ALTs:      0
SN      0       number of SNPs: 149
SN      0       number of MNPs: 0
SN      0       number of indels:       0
SN      0       number of others:       0
SN      0       number of multiallelic sites:   0
SN      0       number of multiallelic SNP sites:       0
# TSTV, transitions/transversions:
# TSTV  [2]id   [3]ts   [4]tv   [5]ts/tv        [6]ts (1st ALT) [7]tv (1st ALT) [8]ts/tv (1st ALT)
TSTV    0       110     39      2.82    110     39      2.82

azureuser@myVM:~$ mv snps2.vcf.recode.vcf snps2.vcf
azureuser@myVM:~$ bgzip snps2.vcf
azureuser@myVM:~$ tabix snps2.vcf.gz

# 2. Align outgroups
azureuser@myVM:~$ bcftools mpileup -Ou -f cov-browser/ref.fas  outgroup-ST90/*.sorted.bam | bcftools call -mv --ploidy-file cov-browser/ploidy.txt  -Ob -o otg.bcf 
# can't use -P 0.1, too many SNPs
[mpileup] 11 samples in 11 input files
SN      0       number of samples:      11
SN      0       number of records:      4314
SN      0       number of no-ALTs:      0
SN      0       number of SNPs: 4312
SN      0       number of MNPs: 0
SN      0       number of indels:       2
SN      0       number of others:       0
SN      0       number of multiallelic sites:   122
SN      0       number of multiallelic SNP sites:       122
# TSTV, transitions/transversions:
# TSTV  [2]id   [3]ts   [4]tv   [5]ts/tv        [6]ts (1st ALT) [7]tv (1st ALT) [8]ts/tv (1st ALT)
TSTV    0       2606    1828    1.43    2528    1784    1.42
azureuser@myVM:~$ bcftools view otg.bcf > otg.vcf
azureuser@myVM:~$ bgzip otg.vcf
azureuser@myVM:~$ tabix otg.vcf.gz

# 3. Merge human & outgroup VCFs
bcftools isec -n=2 -w1 otg.vcf.gz snps2.vcf.gz > otg-isec-sites.vcf                                                                 bgzip & tabix to index
vcf-merge -d -R 0 otg-isec-sites.vcf.gz snps2.vcf.gz > snps-ref.vcf ( no duplicated line; add ref state "0" instead of missing)
SN      0       number of samples:      2562
SN      0       number of records:      149
SN      0       number of no-ALTs:      0
SN      0       number of SNPs: 149
SN      0       number of MNPs: 0
SN      0       number of indels:       0
SN      0       number of others:       0
SN      0       number of multiallelic sites:   0
SN      0       number of multiallelic SNP sites:       0
# TSTV, transitions/transversions:
# TSTV  [2]id   [3]ts   [4]tv   [5]ts/tv        [6]ts (1st ALT) [7]tv (1st ALT) [8]ts/tv (1st ALT)
TSTV    0       110     39      2.82    110     39      2.82

# 4. get samples in FASTA
azureuser@myVM:~$ bcftools query -l snps-ref.vcf > samples
azureuser@myVM:~$ cat samples | while read line; do echo ">$line"; bcftools query -s "$line" -f '[%TGT]' snps-ref.vcf; echo; done > samples.fas
azureuser@myVM:~$ sed -E "s/>.+(EPI_ISL_[0-9]+).sorted.bam/>\1/" samples.fas > samples2.fas

# 5. obtain STs: no imputation (fast)
perl cov-browser/impute-hap.pl --dump-missing --format 'fasta' samples2.fas > missing
azureuser@myVM:~$ sort -n missing | uniq -c | head
   1829 1
   1477 2
   1336 3
   1301 4
   1192 5
    859 6
    843 7
    833 8
     28 9  <= start
     28 10
azureuser@myVM:~$ sort -n missing | uniq -c | tail
      5 140
     15 141
     37 142
     21 143
     22 144
     29 145 <= end
    912 146
   1069 147
   1460 148
   1475 149

recode SNPs:
azureuser@myVM:~$ grep "^NC" snps-ref.vcf | cut -f2 | cat -n | head
     1  4
     2  13
     3  18
     4  21
     5  28
     6  34
     7  35
     8  36
     9  186 <= from-bp
    10  187
azureuser@myVM:~$ grep "^NC" snps-ref.vcf | cut -f2 | cat -n | tail
   140  29635
   141  29683
   142  29700
   143  29734
   144  29736
   145  29751 <= to-bp
   146  29862
   147  29865
   148  29867
   149  29870
azureuser@myVM:~$ vcftools --chr NC_045512 --from-bp 186 --to-bp 29751  --recode --recode-INFO-all --vcf snps-ref.vcf --out snps-clean

VCFtools - 0.1.15
(C) Adam Auton and Anthony Marcketta 2009

Parameters as interpreted:
        --vcf snps-ref.vcf
        --chr NC_045512
        --to-bp 29751
        --recode-INFO-all
        --out snps-clean
        --recode
        --from-bp 186

After filtering, kept 2562 out of 2562 Individuals
Outputting VCF file...
After filtering, kept 137 out of a possible 149 Sites
Run Time = 0.00 seconds
=> "snps-clean.recode.vcf"

## remove manis & ST90
azureuser@myVM:~/no-impute-April-14-2020$ cat epi-to-remove
EPI_ISL_410538
EPI_ISL_410539
EPI_ISL_410540
EPI_ISL_410541
EPI_ISL_410542
EPI_ISL_410543
EPI_ISL_410544
EPI_ISL_410721
EPI_ISL_412860
EPI_ISL_414663
bioseq -d'file:epi-to-remove' samples2.fas | bioaln -i'fasta' --gap-char 'n' > samples-for-no-impute.aln
perl cov-browser/impute-hap.pl --start 9 --end 145 --format 'clustalw' --no-imputation samples-for-no-impute.aln 2> no-impute.log
azureuser@myVM:~$ grep -c remove no-impute.log
202 <= removed >10% missing bases
azureuser@myVM:~/no-impute-April-14-2020$ bioaln -n no-imputed.aln
204
azureuser@myVM:~/no-impute-April-14-2020$ bioaln -l no-imputed.aln
137
azureuser@myVM:~$ bioaln -n no-imputed-sample.aln
2350 <= all samples (no imputation)
azureuser@myVM:~$ cat no-impute.aln | tr 'N' '-' > tmp # replace N's
azureuser@myVM:~$ cp tmp no-impute.aln

## DNAPARS
bioaln -o 'phylip' no-impute.aln > infile
"S" "O" 2 (to speed up)
steps in each site:
         0   1   2   3   4   5   6   7   8   9
     *-----------------------------------------
    0|       3   3   2   5   2   3   2   1   1
   10|   2   1   4   2   3   1   1   3   2   2
   20|   1   1   1   1   4   5   2   1   1   1
   30|   1   1   6   2   1   2   5   3   2   1
   40|   1   2   3   2  13   2   1   4   1   3
   50|   1   1   4   5   4   1   1   1   3   6
   60|   2   3   1   1   3   3   2   1   3   3
   70|   3   3   2   2   2   3   1   4   1   1
   80|   2   1   1   1   3   1   4   1   2   1
   90|   1   3   3   1   1   1   3   1   1   1
  100|   1   4   2   2   1   1   4   1   1   3
  110|   1   1   3   1   1   0   1   1   1   4
  120|   2   3   1   1   2   1   1   4   2   1
  130|   2   2   3   3   8   3   4   6

azureuser@myVM:~$ grep "0|" outfile | tr -s ' ' | cut -f3- -d ' ' | tr ' ' '\n' | grep "[0-9]" | sort -n | uniq -c
      1 0
     66 1
     30 2
     19 3
     12 4
      3 5
      3 6
      1 7
      1 10
      1 16
=> homoplasy 51.1%
"requires a total of    297.000" 
HI = (137-1)/297 = 45.8%

weigang@DESKTOP-5K5HPLF:/mnt/c/Users/lai/Dropbox/cov-weigang$ biotree --walk-edge 'ST2' no-impute.outtree > walk.edge
azureuser@myVM:~$ bcftools query -f "%POS\n" snps-ref.vcf > snps.pos
perl ../cov-browser/hapnet-pars.pl --genome ../cov-browser/ref.gb --vcf snps.pos --hap no-imputed.aln --impute-log no-impute.log --edge-file walk.edge
Error: "Hypothetical node I123: child is not haplotype I122"

## MST
azureuser@myVM:~$ perl cov-browser/hapnet-mst.pl --genome cov-browser/ref.gb --vcf snps-ref.vcf --hap no-impute.aln --impute-log no-impute.log
azureuser@myVM:~$  cut -f3 edges-1.tsv | sort -n | uniq -c | sort -n | tr -s ' ' | cut -f2 -d' ' | sort -n | uniq -c
     81 1
     28 2
     15 3
      7 4
      3 5
      1 6
      1 17

azureuser@myVM:~$ cut -f3,11 edges-1.tsv | sort -n | uniq -c | cut -f2 | sort | uniq -c
     73 0
     53 1
     10 NA
=> "net-1.json"
=> "edges-1.tsv"
=> "nodes-1.tsv"

# 6. Imputation (slow; ~ 1hr for 2500+ seqs)
bioseq -d'file:epi-to-remove' samples2.fas > samples3.fas
azureuser@myVM:~$ perl cov-browser/impute-hap.pl --start 9 --end 145 --format 'fasta' samples3.fas 2> impute.log &
## MST
perl ../cov-browser/hapnet-mst.pl --genome ../cov-browser/ref.gb --vcf snps-ref.vcf --hap with-imputed.aln --impute-log with-impute.log

azureuser@myVM:~/with-impute-April-14-2020$ cut -f3 edges-1.tsv | sort -n | uniq -c | sort -n | tr -s ' ' | cut -f2 -d' ' | sort -n | uniq -c
     77 1
     30 2
     18 3
      6 4
      2 5
      2 6
      1 12
azureuser@myVM:~/with-impute-April-14-2020$ cut -f3,11 edges-1.tsv | sort -n | uniq -c | cut -f2 | sort | uniq -c
     73 0
     53 1
     10 NA

## DNApars
bioaln -o 'phylip' with-imputed.aln > infile
phylip dnapars ("S", "O": 2)
azureuser@myVM:~/with-impute-April-14-2020$ grep "0|" outfile | tr -s ' ' | cut -f3- -d ' ' | tr ' ' '\n' | grep "[0-9]" | sort -n | uniq -c
      1 0
     80 1
     28 2
     17 3
      5 4
      3 5
      2 6
      1 15

azureuser@myVM:~/cov-browser/network-current$ ~/p5-bpwrapper/bin/biotree --walk-edge 'ST2' outtree > walk.edge


azureuser@myVM:~/with-impute-April-14-2020$ perl ../cov-browser/hapnet-pars.pl --genome ../cov-browser/ref.gb --vcf snps.pos --hap with-imputed.aln --impute-log with-impute.log --edge-file walk.edge
=> net-pars.json
=> edges-pars.tsv
=> nodes-pars.tsv
azureuser@myVM:~/with-impute-April-14-2020$ cut -f3 edges-pars.tsv | sort -n | uniq -c | sort -n | tr -s ' ' | cut -f2 -d' ' | sort -n | uniq -c
     80 1
     28 2
     16 3
      6 4
      3 5
      1 6
      1 7
      1 15
homplasy => (137-80)/137 = 41.6%
requires a total of    249.000; CI = 54.6%

################################
# Test of recombination (April 15, 2020)
#####################################

# get conensus
bgzip snps-filtered-2.vcf
tabix snps-filtered-2.vcf.gz
# for one seq:
bcftools consensus -s EPI_ISL_402119 -f ../ref-genome/ref.fas snps-filtered-2.vcf.gz

# get unique EPI for each ST
perl -e 'use strict; my %seen; while(<>){chomp; my @a=split; next if $seen{$a[0]}; $seen{$a[0]} = $a[1]} foreach my $st (keys %seen) {print $st, "\t", $seen{$st}, "\n"}' nodes-pars.tsv > nodes.uniq

# for all seq (n=211: remove outgroup EPI_ISL_402131)
cat nodes.uniq3 | while read line; do bcftools consensus -s $line -f ../ref-genome/ref.fas snps-filtered-2.vcf.gz | sed "s/NC_045512/$line/"; done > consense.fas &

# Use 3seqs (-a: all sites; -d: distinct seqs; -ptable: generated with "3seq -gen-p ptable 100")
# Manual page: https://mol.ax/content/media/2018/02/3seq_manual.20180209.pdf
~/3seq/3seq -full consense.fas -a -d -id run01 -ptable ~/3seq/pfile -L5000
 
